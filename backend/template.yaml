AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  backend

  Sample SAM Template for backend
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Parameters:
  DBInstanceIdentifier:
    Type: String
    Default: 'aws-tests'

Globals:
  Function:
    Timeout: 200
    Runtime: nodejs18.x
    Layers:
      - !Ref NodeModuleLayers
      - !Ref CommonLayer

  Api:
    Cors:
      AllowMethods: "'OPTIONS,POST,GET,DELETE,PATCH,PUT,HEAD'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Resources:
  NodeModuleLayers:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: node-modules
      Description: node-module for project
      ContentUri: node-modules-layer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: MIT
      RetentionPolicy: Retain

  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: common
      Description: common layers for project
      ContentUri: common-layer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: MIT
      RetentionPolicy: Retain

  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/UserRegisteration/
      Handler: createUser.createUser
      Runtime: nodejs18.x
      Tracing: Active
      Architectures:
        - x86_64
      Events:
        CreateUser:
          Type: Api
          Properties:
            Path: /user
            Method: post

  GetUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/UserRegisteration/
      Handler: getUser.getUser
      Runtime: nodejs18.x
      Tracing: Active
      Architectures:
        - x86_64
      Events:
        CreateUser:
          Type: Api
          Properties:
            Path: /user
            Method: get


  CreateProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/ProductsTenant/
      Handler: createProduct.createProduct
      Runtime: nodejs18.x
      Tracing: Active
      Architectures:
        - x86_64
      Events:
        CreateProduct:
          Type: Api
          Properties:
            Path: /product
            Method: post

  GetProductsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/ProductsTenant/
      Handler: getProducts.getProducts
      Runtime: nodejs18.x
      Tracing: Active
      Architectures:
        - x86_64
      Events:
        GetProduct:
          Type: Api
          Properties:
            Path: /products
            Method: get

  GetProductFunction:
    Type: AWS::Serverless::function
    Properties:
      CodeUri: dist/ProductsTenant/
      Handler: getProduct.getProduct
      Runtime: nodejs18.x
      Tracing: Active
      Architectures:
        - x86_64
      Events:
        GetProduct:
          Type: Api
          Properties:
            Path: /product
            Method: get

  UpdateProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/ProductsTenant/
      Handler: updateProduct.updateProduct
      Runtime: nodejs18.x
      Tracing: Active
      Architectures:
        - x86_64
      Events:
        UpdateProduct:
          Type: Api
          Properties:
            Path: /product
            Method: patch

  DeleteProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/ProductsTenant/
      Handler: deleteProduct.deleteProduct
      Runtime: nodejs18.x
      Tracing: Active
      Architectures:
        - x86_64
      Events:
        DeleteProduct:
          Type: Api
          Properties:
            Path: /product
            Method: delete

  pgDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: 'aws_tests'
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      AllocatedStorage: 5
      DBInstanceClass: db.t3.micro
      Engine: postgres
      MasterUsername: 'postgres'
      MasterUserPassword: 'postgres'
    DeletionPolicy: Snapshot

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CreateProductFunction:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/hello"
  CreateProductFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt CreateProductFunction.Arn
  CreateProductFunctionIamRole:
    Description: "Implicit IAM Role created for Create Product function"
    Value: !GetAtt CreateProductFunctionRole.Arn

  GetProductFunction:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/"
  GetProductFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt GetProductFunction.Arn
  GetProductFunctionIamRole:
    Description: "Implicit IAM Role created for Create Product function"
    Value: !GetAtt GetProductFunctionRole.Arn

  GetProductsFunction:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/"
  GetProductsFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt GetProductsFunction.Arn
  GetProductsFunctionIamRole:
    Description: "Implicit IAM Role created for Create Product function"
    Value: !GetAtt GetProductsFunctionRole.Arn

  UpdateProductFunction:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/"
  UpdateProductFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt UpdateProductFunction.Arn
  UpdateProductFunctionIamRole:
    Description: "Implicit IAM Role created for Create Product function"
    Value: !GetAtt UpdateProductFunctionRole.Arn

  DeleteProductFunction:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/delete-api/user/product"
  DeleteProductFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt DeleteProductFunction.Arn
  DeleteProductFunctionIamRole:
    Description: "Implicit IAM Role created for Create Product function"
    Value: !GetAtt DeleteProductFunctionRole.Arn
